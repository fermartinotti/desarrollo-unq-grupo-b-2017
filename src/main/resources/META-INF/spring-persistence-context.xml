<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:cxf="http://cxf.apache.org/core" 
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
	http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">
       
       
       
    <tx:annotation-driven transaction-manager="persistence.transactionManager"	proxy-target-class="true" />

<!--
		========================= GENERAL DEFINITIONS
		=========================
	-->
	<!--
		Configurer that replaces ${...} placeholders with values from
		properties files
	-->
	<!-- (in this case, mail and JDBC related properties) -->
	<bean id="persistence.propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:META-INF/hibernate.properties</value>
				<value>classpath*:META-INF/jdbc.properties</value>
				<!-- <value>classpath*:META-INF/jdbc.MYSQL.properties</value> -->
			</list>
		</property>
	</bean>

	<bean id="persistence.dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.db.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="initialSize" value="20" />
        <property name="maxActive" value="30" />
        <property name="maxIdle" value="25" />

	</bean>

	<!--
		Defines a global session factory that will be used by all modules.
	-->
<!-- 	<bean id="persistence.sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
		
		<bean id="persistence.sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >

		<property name="dataSource" ref="persistence.dataSource" />
<!--  
		<property name="entityCacheStrategies" ref="persistence.hibernateClassCacheProperties" />
		<property name="collectionCacheStrategies" ref="persistence.hibernateCollectionCacheProperties" />
-->

		<property name="hibernateProperties">
			<props>
				<!--
					Configuration generic properties. They are loaded from file
					hibernate.properties
				-->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<!-- Propiedades para la configuraciÃ³n de la cache de segundo nivel
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop> -->
				<prop key="hibernate.connection.autocommit">false</prop>
<!-- 				<prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory</prop> -->
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:mappings/*.hbm.xml</value>
			</list>
		</property>

	</bean>


<!-- Transaction manager for a single JDBC DataSource -->
	<bean id="persistence.transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
<!-- 		<property name="jdbcExceptionTranslator" ref="persistence.jdbcExceptionTranslator" /> -->
	</bean>

	<bean name="persistence.jdbcExceptionTranslator"
		class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
		<constructor-arg>
			<ref bean="persistence.dataSource" />
		</constructor-arg>
	</bean>

	<!-- =========================== -->
	<!-- =========JAXB / CXF ========= -->
	<!-- =========================== -->
	 
		<import resource="classpath:META-INF/cxf/cxf.xml" />
		<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
		<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
		<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider" />
	
		<bean id='jacksonProvider' class='org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider' />
	
	<jaxrs:server id="cliente" address="/"  > 
		<jaxrs:serviceBeans>
			<ref bean="clienteRest" />
			<ref bean="proveedorRest" />
			<ref bean="menuRest"/>
			<ref bean="servicioRest"/>
			<ref bean="dataFakeRest"/>
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:providers>
			<ref bean="jaxbProvider" />
			<ref bean="jacksonProvider" />
		</jaxrs:providers>
		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>
	</jaxrs:server>
	
	
	<!-- ________________________________________ -->
	<!-- ________________________________________ -->
	<!-- ___________ Beans  de negocio___________ -->
	<!-- ________________________________________ -->
	<!-- ________________________________________ -->
	
    
    <!-- *************** Cliente *************** -->
    
    <bean id="clienteDAO" class="morfiya.repositories.ClienteDAO">
    	<property name="sessionFactory" ref="persistence.sessionFactory"/>
    </bean>


   <bean id="clienteService" class="morfiya.services.ClienteService">
    	<property name="repository" ref="clienteDAO"/>
    </bean>

	<!-- *************** Proveedor *************** -->

    <bean id="proveedorDAO" class="morfiya.repositories.ProveedorDAO">
    	<property name="sessionFactory" ref="persistence.sessionFactory"/>
    </bean>


   <bean id="proveedorService" class="morfiya.services.ProveedorService">
    	<property name="repository" ref="proveedorDAO"/>
    </bean>
    
    <!-- *************** MENU *************** -->
    
    <bean id="menuDAO" class="morfiya.repositories.MenuDAO">
    	<property name="sessionFactory" ref="persistence.sessionFactory"/>
    </bean>


   <bean id="menuService" class="morfiya.services.MenuService">
    	<property name="repository" ref="menuDAO"/>
    </bean>
    
    <!-- *************** Servicio *************** -->
    
    <bean id="servicioDAO" class="morfiya.repositories.ServicioDAO">
    	<property name="sessionFactory" ref="persistence.sessionFactory"/>
    </bean>


   <bean id="servicioService" class="morfiya.services.ServicioService">
    	<property name="repository" ref="servicioDAO"/>
    </bean>
    
    <!-- *************** Servicio *************** -->
	<bean id="pedidoDAO" class="morfiya.repositories.PedidoDAO">
    	<property name="sessionFactory" ref="persistence.sessionFactory"/>
    </bean>


   <bean id="CompraService" class="morfiya.services.CompraService">
    	<property name="pedidoDAO" ref="pedidoDAO"/>
    	<property name="clienteDAO" ref="clienteDAO"/>
    	<property name="proveedorDAO" ref="proveedorDAO"/>
    	<property name="menuDAO" ref="menuDAO"/>
    	
    	
    </bean>
</beans>